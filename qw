#! /usr/bin/env python
import sys

from optparse import OptionParser

from modules.hosts import get_host_analyzer
from modules.summary import full_summary

def opts() :
    parser = OptionParser("usage: %prog [options]")
    parser.add_option("-l", "--local-debug", dest="local_debug",
                      default=None, metavar="Q",
                      help="use text files instead of calling status commands")
    parser.add_option("-w", "--watch", dest="watch", default=None, metavar="N",
                      type="int", help="show status every N seconds")
    options,args = parser.parse_args()
    return options, args


def watch_queues(analyzer,delay):
    import time
    import curses

    import locale
    locale.setlocale(locale.LC_ALL, '')
    code = locale.getpreferredencoding()

    stdscr = curses.initscr()
    curses.noecho()

    # nice lil closure hack
    def updatescr(str):
        stdscr.addstr(str+"\n")
        stdscr.refresh()

    try:
        while True:
            stdscr.clear()
            full_summary(analyzer, outfunc=updatescr)
            time.sleep(delay)
    except KeyboardInterrupt:
        curses.nocbreak(); stdscr.keypad(0); curses.echo()
        curses.endwin()
        exit()


if __name__=="__main__":
    options, args = opts()
    HostQAnalyzer = get_host_analyzer()
    QAnalyzer = HostQAnalyzer()
    repeat = (options.watch is not None)
    if repeat:
        watch_queues(QAnalyzer,options.watch)
    else:
        full_summary(QAnalyzer)
